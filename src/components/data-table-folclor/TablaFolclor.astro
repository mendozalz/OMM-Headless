---
import {
  actividades,
  ciudadInstituto,
  eventosFestivales,
  libros,
  revistas,
  discos
} from "./data.folclor";

// Filtrar las revistas que pertenecen a "Bogotá 450 años"
const bogotaRevistas = revistas.filter(item => 
  item.titulo.includes("- ") && 
  !item.titulo.includes("Bogotá 450 años")
);
---

<!-- component -->
<div class="m-auto flex justify-center pt-[100px]">
  <section class="container mx-auto p-6 font-mono">
    <h1 class="text-4xl font-medium leading-none sm:text-6xl text-black text-center mb-8">Folclor</h1>
    <div class="w-full mb-8 overflow-hidden rounded-lg shadow-lg">
      <div class="w-full overflow-x-auto">
        <!--  1ra fila -->
        <table class="w-full">
          <thead>
            <tr
              class="text-md font-semibold tracking-wide text-left text-gray-900 bg-gray-100 uppercase border-b border-gray-600"
            >
              <th class="px-4 py-3 border-b-[1px] border-black">Entidades donde trabajó</th>
              <th class="px-4 py-3 border-b-[1px] hidden lg:block"
                >Actividades</th
              >
            </tr>
          </thead>
          <tbody class="bg-white">
            <tr class="text-gray-700">
              <td class="px-4 py-1 border w-1/2 relative" id="instituto-container">
                <div class="w-full h-full my-3 block lg:absolute top-0" id="instituto-content">
                  <ul class="list-disc">
                {
                  ciudadInstituto.map((item) => (
                        <li class="text-ms text-gray-600 mt-2">
                          * {item.instituto}
                        </li>
                  ))
                }
                </ul>
                </div>
              </td>
              <td class="px-4 py-3 text-ms w-full hidden lg:block text-gray-600">
                <ul class="px-2 list-disc">
                  {
                    actividades.map((item, index) => {
                      if (item.actividad === "Investigaciones realizadas:") {
                        return (
                          <>
                            <li class="mt-2"> * {item.actividad}</li>
                            <ul class="ml-2">
                              {actividades.slice(index + 1, index + 5).map(subItem => (
                                <li class="mt-1 text-pretty">{subItem.actividad}</li>
                              ))}
                            </ul>
                          </>
                        );
                      } else if (
                        !item.actividad.startsWith("-") && 
                        index > 1 && 
                        index < actividades.length - 3
                      ) {
                        return null;
                      } else if (index >= actividades.length - 3) {
                        return <li class="mt-2"> * {item.actividad}</li>;
                      } else if (index === 0) {
                        return <li class="mt-2"> * {item.actividad}</li>;
                      }
                      return null;
                    })
                  }
                </ul>
              </td>
            </tr>
          </tbody>
        </table>
        <!-- 2da fila movil -->
        <table class="w-full lg:hidden">
          <thead>
            <tr
              class="text-md font-semibold tracking-wide text-left text-gray-900 bg-gray-100 uppercase border-b border-gray-600"
            >
              <th class="px-4 py-3 border-b-[1px] border-black">Actividades</th>
            </tr>
          </thead>
          <tbody class="bg-white">
            <tr class="text-gray-700">
              <td class="px-4 py-3 text-ms border w-1/2">
                <ul class="px-2">
                  {
                    actividades.map((item, index) => {
                      if (item.actividad === "Investigaciones realizadas:") {
                        return (
                          <>
                            <li class="list-disc mt-2">* {item.actividad}</li>
                            <ul class="ml-2">
                              {actividades.slice(index + 1, index + 5).map(subItem => (
                                <li class="mt-1">{subItem.actividad}</li>
                              ))}
                            </ul>
                          </>
                        );
                      } else if (
                        !item.actividad.startsWith("-") && 
                        index > 1 && 
                        index < actividades.length - 3
                      ) {
                        return null;
                      } else if (index >= actividades.length - 3) {
                        return <li class="list-disc mt-2">* {item.actividad}</li>;
                      } else if (index === 0) {
                        return <li class="list-disc mt-2">* {item.actividad}</li>;
                      }
                      return null;
                    })
                  }
                </ul>
              </td>
            </tr>
          </tbody>
        </table>
        <!-- 2da fila -->
        <table class="w-full">
          <thead>
            <tr
              class="text-md font-semibold tracking-wide text-left text-gray-900 bg-gray-100 uppercase border-b border-gray-600"
            >
              <th class="px-4 py-3 border-b-[1px] border-black"
                >Libros</th
              >
              <th class="px-4 py-3 hidden lg:block">Revistas</th>
            </tr>
          </thead>
          <tbody class="bg-white">
            <tr class="text-gray-700">
              <td class="px-4 py-1 border w-1/2 relative">
                <div class="text-ms text-gray-600 my-3 lg:absolute top-0">
                {
                  libros.map((item) => (
                      <p>* {item.titulo}</p>
                    ))
                  }
                </div>
              </td>
              <td
                class="px-4 text-ms border w-full border-none hidden lg:block"
                >
                <ul class="py-2 text-ms text-gray-600">
                {
                  revistas.map((item, index) => {
                    if (item.titulo === "Bogotá 450 años – Lecturas de Música Colombiana - 55 revistas:") {
                      return (
                        <li class="list-disc my-3">
                          * {item.titulo} 
                          <button 
                            id="openModalBtn" 
                            class="ml-2 px-3 py-1 mt-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500"
                          >
                            Ver Listado
                          </button>
                        </li>
                      );
                    } else if (!item.titulo.includes("- ")) {
                      return <li class="list-disc my-3">* {item.titulo}</li>;
                    }
                    return null;
                  })
                }
                </ul>
                </td>
            </tr>
          </tbody>
        </table>
        <!-- 3ra fila movil -->
        <table class="w-full lg:hidden">
          <thead>
            <tr
              class="text-md font-semibold tracking-wide text-left text-gray-900 bg-gray-100 uppercase border-b border-gray-600"
            >
              <th class="px-4 py-3 border-b-[1px] border-black">Revistas</th>
            </tr>
          </thead>
          <tbody class="bg-white">
            <tr class="text-gray-700">
              <td class="px-4 py-3 text-ms border w-1/2">
                <ul class="px-2">
                  {
                    revistas.map((item, index) => {
                      if (item.titulo === "Bogotá 450 años – Lecturas de Música Colombiana - 55 revistas:") {
                        return (
                          <li class="list-disc mt-2">
                            * {item.titulo}
                            <button 
                              id="openModalBtnMobile" 
                              class="ml-2 px-3 py-1 bg-gray-600 text-white rounded-md hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500"
                            >
                              Ver Listado
                            </button>
                          </li>
                        );
                      } else if (!item.titulo.includes("- ")) {
                        return <li class="list-disc mt-2">* {item.titulo}</li>;
                      }
                      return null;
                    })
                  }
                </ul>
              </td>
            </tr>
          </tbody>
        </table>
        <!-- 3ra fila -->
        <table class="w-full">
          <thead>
            <tr
              class="text-md font-semibold tracking-wide text-left text-gray-900 bg-gray-100 uppercase border-b border-gray-600"
            >
              <th class="px-4 py-3 border-b-[1px] border-black"
                >Discos</th
              >
              <th class="px-4 py-3 hidden lg:block">Eventos & Festivales</th>
            </tr>
          </thead>
          <tbody class="bg-white">
            <tr class="text-gray-700">
              <td class="px-4 py-1 border w-1/2 relative">
                <div class="text-ms text-gray-600 my-3 lg:absolute top-0">
                {
                  discos.map((item) => (
                        <p>* {item.titulo}</p>
                    ))
                  }
                </div>
              </td>
              <td
                class="px-4 text-ms border w-full border-none hidden lg:block"
              >
                <ul class="py-2 text-ms text-gray-600">
                  {
                    eventosFestivales.map((item) => (
                      <li class="list-disc my-3">* {item.titulo}</li>
                    ))
                  }
                </ul>
              </td>
            </tr>
          </tbody>
        </table>
        <!-- 4ta fila movil -->
        <table class="w-full lg:hidden">
          <thead>
            <tr
              class="text-md font-semibold tracking-wide text-left text-gray-900 bg-gray-100 uppercase border-b border-gray-600"
            >
              <th class="px-4 py-3 border-b-[1px] border-black">Eventos & Festivales</th>
            </tr>
          </thead>
          <tbody class="bg-white">
            <tr class="text-gray-700">
              <td class="px-4 py-3 text-ms border w-1/2">
                <ul class="px-2">
                  {
                    eventosFestivales.map((item) => (
                      <li class="list-disc mt-2">* {item.titulo}</li>
                    ))
                  }
                </ul>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </section>
</div>

<!-- Modal para mostrar el listado de revistas -->
<div id="revistasModal" class="fixed inset-0 bg-black bg-opacity-0 z-50 flex items-center justify-center opacity-0 pointer-events-none transition-all duration-300 ease-in-out">
  <div class="w-full max-w-3xl transform overflow-hidden rounded-lg bg-white shadow-xl transition-all duration-300 flex flex-col scale-95" style="max-height: calc(100vh - 2rem)">
    <div class="flex justify-between items-center p-3 sm:p-4 md:p-6 border-b border-gray-200 bg-verde-claro bg-opacity-20 sticky top-0">
      <h3 class="text-xl sm:text-2xl font-bold text-verde-oscuro">Bogotá 450 años – Lecturas de Música Colombiana</h3>
      <button id="closeModalBtn" class="text-gray-500 hover:text-gray-700 transition-colors duration-200 p-2 rounded-full hover:bg-gray-100">
        <svg class="h-5 w-5 sm:h-6 sm:w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>
    <div 
      class="p-3 sm:p-4 md:p-6 overflow-y-auto" 
      style="max-height: calc(100vh - 12rem); overscroll-behavior: contain; -webkit-overflow-scrolling: touch;"
      id="modalContent"
      onwheel="event.stopPropagation()"
    >
      <ul class="space-y-2 text-gray-700 prose max-w-none leading-relaxed text-sm sm:text-base">
        {bogotaRevistas.map((item) => (
          <li class="py-1" set:html={item.titulo.replace("- ", "*-")} />
        ))}
      </ul>
    </div>
    <div class="p-3 sm:p-4 border-t border-gray-200 flex justify-end bg-gray-50">
      <button 
        id="closeModalBtnFooter" 
        class="px-3 sm:px-4 py-2 bg-verde-oscuro text-white rounded hover:bg-verde-dark transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-verde-oscuro focus:ring-opacity-50"
      >
        Cerrar
      </button>
    </div>
  </div>
</div>

<!-- Navegación con flechas -->
<div class="w-full max-w-4xl mx-auto p-4 mt-8 mb-16">
  <div class="flex justify-between items-center">
    <a href="/teatro" class="flex items-center text-black hover:text-verde-oscuro transition-colors duration-300">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
      </svg>
      <span class="text-lg ml-2 font-medium">Teatro</span>
    </a>
    <a href="/musica" class="flex items-center text-black hover:text-verde-oscuro transition-colors duration-300">
      <span class="text-lg mr-2 font-medium">Música</span>
      <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
      </svg>
    </a>
  </div>
</div>

<style>
  @media (max-width: 640px) {
    .flex.justify-between span {
      font-size: 1rem;
    }
    
    .flex.justify-between svg {
      height: 1.5rem;
      width: 1.5rem;
    }
  }
</style>

<script>
  // Función para inicializar el modal
  function initModal() {
    const modal = document.getElementById('revistasModal');
    const modalContent = modal?.querySelector('.transform');
    const modalScrollableContent = document.getElementById('modalContent');
    const openModalBtn = document.getElementById('openModalBtn');
    const openModalBtnMobile = document.getElementById('openModalBtnMobile');
    const closeModalBtn = document.getElementById('closeModalBtn');
    const closeModalBtnFooter = document.getElementById('closeModalBtnFooter');
    
    // Variables para almacenar la posición original del scroll
    let scrollY = 0;
    
    // Función para abrir el modal con transición
    const openModal = () => {
      if (modal) {
        // Guardar la posición actual del scroll
        scrollY = window.scrollY;
        
        // Bloquear el scroll en el documento
        document.body.style.overflow = 'hidden';
        
        // Primero hacemos visible el modal pero sin mostrar contenido aún
        modal.classList.remove('pointer-events-none');
        
        // Pequeño retraso para que la transición se vea bien
        setTimeout(() => {
          modal.classList.add('bg-opacity-50');
          modal.classList.add('opacity-100');
          if (modalContent) {
            modalContent.classList.remove('scale-95');
            modalContent.classList.add('scale-100');
          }
        }, 10);
      }
    };
    
    // Función para cerrar el modal con transición
    const closeModal = () => {
      if (modal) {
        modal.classList.remove('bg-opacity-50');
        modal.classList.remove('opacity-100');
        if (modalContent) {
          modalContent.classList.remove('scale-100');
          modalContent.classList.add('scale-95');
        }
        
        // Esperar a que termine la transición antes de ocultar completamente
        setTimeout(() => {
          modal.classList.add('pointer-events-none');
          
          // Restaurar el scroll
          document.body.style.overflow = '';
          
        }, 300);
      }
    };
    
    // Eliminar event listeners existentes para evitar duplicados
    if (openModalBtn) {
      openModalBtn.removeEventListener('click', openModal);
      openModalBtn.addEventListener('click', openModal);
    }
    
    if (openModalBtnMobile) {
      openModalBtnMobile.removeEventListener('click', openModal);
      openModalBtnMobile.addEventListener('click', openModal);
    }
    
    if (closeModalBtn) {
      closeModalBtn.removeEventListener('click', closeModal);
      closeModalBtn.addEventListener('click', closeModal);
    }
    
    if (closeModalBtnFooter) {
      closeModalBtnFooter.removeEventListener('click', closeModal);
      closeModalBtnFooter.addEventListener('click', closeModal);
    }
    
    // Cerrar el modal al hacer clic fuera de él
    if (modal) {
      modal.removeEventListener('click', (e) => {
        if (e.target === modal) closeModal();
      });
      
      modal.addEventListener('click', (e) => {
        if (e.target === modal) closeModal();
      });
    }
    
    // Cerrar el modal con la tecla Escape
    document.removeEventListener('keydown', (e) => {
      if (e.key === 'Escape' && modal && !modal.classList.contains('pointer-events-none')) {
        closeModal();
      }
    });
    
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && modal && !modal.classList.contains('pointer-events-none')) {
        closeModal();
      }
    });
  }

  // Inicializar el modal cuando el DOM está listo
  document.addEventListener('DOMContentLoaded', initModal);
  
  // También inicializar cuando el script se ejecute (para navegación client-side)
  initModal();
  
  // Agregar un observador de mutaciones para detectar cambios en el DOM
  // Esto es útil para SPA y navegación client-side en Astro
  const observer = new MutationObserver((mutations) => {
    for (const mutation of mutations) {
      if (mutation.type === 'childList') {
        initModal();
      }
    }
  });
  
  // Observar cambios en el cuerpo del documento
  observer.observe(document.body, { childList: true, subtree: true });
  
  // Limpiar el observador cuando la página se descargue
  window.addEventListener('beforeunload', () => {
    observer.disconnect();
  });
</script>
